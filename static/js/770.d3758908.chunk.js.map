{"version":3,"file":"static/js/770.d3758908.chunk.js","mappings":"uQAsFA,EAlFe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0CJ,EAAAA,EAAAA,WAAS,GAAnD,eAAOK,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAcJ,EAAaK,IAAI,YAAc,IAEnDC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CAGA,IAAMU,EAAW,mCAAG,0FACF,mCAChBX,GAAW,GAFO,kBAIOY,EAAAA,EAAAA,IAAA,4DAHT,mCAGS,kBACiDJ,IALxD,OAIVK,EAJU,OAOhBf,EAAUe,EAASC,KAAKC,SACxBf,GAAW,GARK,kDAUhBgB,QAAQC,IAAR,MACAjB,GAAW,GAXK,0DAAH,qDAcjBW,GAfC,CAgBF,GAAE,CAACV,EAAeO,IAoBnB,OACE,4BACE,kBAAMU,SApBW,SAAAC,GACnBA,EAAMC,iBACqB,KAAvBZ,EAAYa,QAIhBhB,EAAgB,CAAEiB,QAASd,EAAYa,SACvCnB,GAAiB,IAJfqB,MAAM,+BAKT,EAYG,WACE,mBAAQC,KAAK,SAAb,qBACA,0BACE,kBACEA,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAOpB,EACPqB,SAnBgB,SAAAC,GACC,KAArBA,EAAIC,OAAOH,MACbvB,EAAgB,CAAC,GAEjBA,EAAgB,CAAEiB,QAASQ,EAAIC,OAAOH,OAEzC,SAkBI7B,GACC,uCAEA,wBACGF,EAAOmC,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAM/B,GAAhD,SACG2B,EAAMK,SAFFL,EAAME,GADA,QAW1B,C","sources":["components/Movies/movies.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const searchQuery = searchParams.get('movieId') || '';\n\n  useEffect(() => {\n    if (!buttonClicked) {\n      return;\n    }\n    const fetchMovies = async () => {\n      const API_KEY = '80a258dcbf0a895a310fa1108346ec65';\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n        );\n        setMovies(response.data.results);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n    fetchMovies();\n  }, [buttonClicked, searchQuery]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Please enter a search query.');\n      return;\n    }\n    setSearchParams({ movieId: searchQuery.trim() });\n    setButtonClicked(true);\n  };\n\n  const updateQueryString = evt => {\n    if (evt.target.value === '') {\n      setSearchParams({});\n    } else {\n      setSearchParams({ movieId: evt.target.value });\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <button type=\"submit\">Search</button>\n        <div>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies\"\n            value={searchQuery}\n            onChange={updateQueryString}\n          />\n        </div>\n      </form>\n\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["useState","movies","setMovies","loading","setLoading","buttonClicked","setButtonClicked","useSearchParams","searchParams","setSearchParams","location","useLocation","searchQuery","get","useEffect","fetchMovies","axios","response","data","results","console","log","onSubmit","event","preventDefault","trim","movieId","alert","type","autoComplete","autoFocus","placeholder","value","onChange","evt","target","map","movie","to","id","state","from","title"],"sourceRoot":""}