{"version":3,"file":"static/js/58.05dab5ad.chunk.js","mappings":"6PA8DA,EAzDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KAoBA,OAlBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,0FACA,mCAChBJ,GAAW,GAFK,kBAISK,EAAAA,EAAAA,IAAA,6CACiBT,EADjB,4BAHT,qCADA,OAIRU,EAJQ,OAOdJ,EAAQI,EAASC,KAAKN,MACtBD,GAAW,GARG,kDAUdQ,QAAQC,IAAR,MACAT,GAAW,GAXG,0DAAH,qDAcfI,GACD,GAAE,CAACR,IAEAG,GACK,2CAGW,IAAhBE,EAAKS,QACA,2DAGP,4BACE,mCACA,wBACGT,EAAKU,KAAI,SAAAC,GAAK,OACb,0BACGA,EAAMC,cACL,gBACEC,IAAG,yCAAoCF,EAAMC,cAC7CE,IAAKH,EAAMI,QAGb,+CAEF,uBAAIJ,EAAMI,QACV,uCAAeJ,EAAMK,eAVdL,EAAMM,GADF,QAiBtB,C","sources":["components/Cast/cast.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      const API_KEY = '80a258dcbf0a895a310fa1108346ec65';\n      setLoading(true);\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`\n        );\n        setCast(response.data.cast);\n        setLoading(false);\n      } catch (error) {\n        console.log(error);\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  if (loading) {\n    return <p>Loading cast...</p>;\n  }\n\n  if (cast.length === 0) {\n    return <p>No cast information available.</p>;\n  }\n  return (\n    <div>\n      <h3>Cast:</h3>\n      <ul>\n        {cast.map(actor => (\n          <li key={actor.id}>\n            {actor.profile_path ? (\n              <img\n                src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                alt={actor.name}\n              />\n            ) : (\n              <p>No image available</p>\n            )}\n            <p>{actor.name}</p>\n            <p>Character: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","useState","loading","setLoading","cast","setCast","useEffect","fetchCast","axios","response","data","console","log","length","map","actor","profile_path","src","alt","name","character","id"],"sourceRoot":""}